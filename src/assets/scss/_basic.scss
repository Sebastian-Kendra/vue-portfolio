* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    font-size: 90%;
    cursor: url(../img/circle-dot-solid.svg) 5.2 5.2, auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

::selection {
    background-color: $hover-nav-color;
    color: $btn-color-primary;
}

::-webkit-scrollbar {
    width: 10px;
    height: 10px;
}

::-webkit-scrollbar-track {
    border-radius: 5px;
    background-color: rgba(255, 255, 255, 0.1);
}

::-webkit-scrollbar-thumb {
    background-color: $bg-color-btn-second;
    border-radius: 5px;
    box-shadow: rgba(0, 0, 0, .12) 0 3px 13px 1px;
    -webkit-box-shadow: rgba(0, 0, 0, .12) 0 3px 13px 1px;
}

body {
    margin: 0;
    font-family: $page-font;
    background-color: $bg-color-page;
}

h1 {
    font-size: 2.9em;
}

h2 {
    font-size: 1.9em;
}

h1,h2 {
    margin: {
        top: 0.8em;
        bottom: 0.8em;
    };
}

input,
textarea {
    font-family: $page-font;
}

a {
    color: $page-color;
}

a,
p {
    margin: 0;
    padding: 0;
    text-decoration: none;
}

.disabled {
    opacity: 0.25;
    pointer-events: none;
}

.cursor {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: var(--width);
    height: var(--height);
    transform:
        translate(calc(var(--x) - var(--width) / 2),
            calc(var(--y) - var(--height) / 2));
    transition-duration: .1s;
    transition-timing-function: cubic-bezier(.25, .25, .42, 1);
    transition-property: width, height, transform;
    z-index: 10000;
    pointer-events: none;
    will-change: transform;

    @media (pointer: fine) {
        display: block;
    }

    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: var(--radius);
        border: 2px solid rgba(8, 14, 37, 0.293);
        opacity: var(--scale);
        transform: scale(var(--scale));
        transition:
            .3s cubic-bezier(.25, .25, .42, 1) opacity,
            .3s cubic-bezier(.25, .25, .42, 1) transform,
            .1s cubic-bezier(.25, .25, .42, 1) border-radius;
    }
}